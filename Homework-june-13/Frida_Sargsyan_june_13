#!/bin/bash

#Create a VPC with a 10.0.0.0/16 CIDR block 
aws ec2 create-vpc --cidr-block 10.0.0.0/16 --query Vpc.VpcId --output text > vpc_file

#Using the VPC ID from the previous step, create a subnet with a 10.0.1.0/24 CIDR block
vpc_id=`cat vpc_file` 
aws ec2 create-subnet --vpc-id $vpc_id --cidr-block 10.0.1.0/24

#Create a second subnet in  VPC with a 10.0.0.0/24 CIDR block.
aws ec2 create-subnet --vpc-id $vpc_id --cidr-block 10.0.0.0/24

#Create an internet gateway
aws ec2 create-internet-gateway --query InternetGateway.InternetGatewayId --output text > igw_file

#Using the ID from the previous step, attaching internet gateway to VPC
igw_id=`cat igw_file`
aws ec2 attach-internet-gateway --vpc-id $vpc_id --internet-gateway-id $igw_id

#Createing a custom route table for VPC 
aws ec2 create-route-table --vpc-id $vpc_id --query RouteTable.RouteTableId --output text > rtb_file
rtb_id=`cat rtb_file`

#Creating a route in the route table that points all traffic (0.0.0.0/0) to the internet gateway 
aws ec2 create-route --route-table-id $rtb_id --destination-cidr-block 0.0.0.0/0 --gateway-id $igw_id

#Confirm that route has been created and is active
aws ec2 describe-route-tables --route-table-id $rtb_id

#route table association with subnets
echo "............................"
aws ec2 describe-subnets --filters "Name=vpc-id,Values=$vpc_id" --query "Subnets[*].{ID:SubnetId,CIDR:CidrBlock}" > subnets_file

subnetid=`cat subnets_file | head -3 | tail -1 | tr '"' '+' | cut -d "+" -f 4`
echo $subnetid

#subnet to associate with the custom route table
aws ec2 associate-route-table  --subnet-id $subnetid --route-table-id $rtb_id
#nstance launched into the subnet automatically receives a public IP address 
aws ec2 modify-subnet-attribute --subnet-id $subnetid --map-public-ip-on-launch


########################################################
#Launch an instance into  subnet
#Creating a key pair
aws ec2 create-key-pair --key-name MyKeyPair --query "KeyMaterial" --output text > MyKeyPair.pem
chmod 700 MyKeyPair.pem

#Create a security group in VPC 
sg_id=`aws ec2 create-security-group --group-name SSHAccess --description "Security group for SSH access" --vpc-id $vpc_id |head -2 | tail -1 | tr '"' '+' | cut -d "+" -f 4`
echo $sg_id

#rule that allows SSH access from anywhere
aws ec2 authorize-security-group-ingress --group-id $sg_id --protocol tcp --port 22 --cidr 0.0.0.0/0

#Launch an instance into public subnet, using the security group and key pair created
aws ec2 run-instances --image-id ami-a4827dc9 --count 1 --instance-type t2.micro --key-name MyKeyPair --security-group-ids $sg_id --subnet-id $subnetid


